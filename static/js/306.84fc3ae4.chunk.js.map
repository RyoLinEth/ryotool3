{"version":3,"file":"static/js/306.84fc3ae4.chunk.js","mappings":"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","sources":["views/demo/CreateData.js","views/demo/Create3.js","views/demo/bytecode/NormalToken/normalToken.js","views/demo/bytecode/MarketLP/BNB.js"],"sourcesContent":["\r\nexport const moduleTypesEN =\r\n    [\r\n        {\r\n            MODULE: \"Choose Token Template\",\r\n        }, \r\n        {\r\n            MODULE: \"Normal 0 Tax Token\",\r\n            Description: \"This template doens't contains any tax and has the lowest transaction fee\"\r\n        },\r\n        {\r\n            MODULE: \"Marketing && LP Token\",\r\n            Description: \"This template contains marketing and liquidity fee. The liquidity fee would enlarge the liquidity pool, and the marketing fee would make profits to the project owner.\"\r\n        },\r\n        {\r\n            MODULE: \"Reward Token\",\r\n            Description: \"This template contains reflection, marketing and liquidity fee. The liquidity fee would enlarge the liquidity pool, the marketing fee would make profits to the project owner, and the reflection fee rewards the holders.\"\r\n        },\r\n    ]\r\n\r\n\r\nexport const moduleTypesCN =\r\n    [\r\n        {\r\n            MODULE: \"請選擇合約模板\",\r\n            Description: \"\"\r\n        }, \r\n        {\r\n            MODULE: \"普通 0 稅代幣\",\r\n            Description: \"該模板是為「0稅模板」，無法自訂稅率，是交易手續費最低的一個模板。\"\r\n        },\r\n        {\r\n            MODULE: \"營銷回流代幣\",\r\n            Description: \"該模板提供營銷以及回流稅率。回流可以使流動性越來越大，營銷可以使項目方獲得額外收益。\"\r\n        },\r\n        {\r\n            MODULE: \"分紅代幣\",\r\n            Description: \"該模板提供分紅、營銷以及回流稅率。回流可以使流動性越來越大，營銷可以使項目方獲得額外收益，分紅可使持幣者獲得代幣紅利\"\r\n        },\r\n    ]\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport TokenDescription from './TokenDescription'\r\nimport useLocale from 'utils/hooks/useLocale'\r\nimport swal from 'sweetalert';\r\nimport { Dropdown } from 'components/ui'\r\nimport DropdownItem from 'components/ui/Dropdown/DropdownItem';\r\nimport { useSelector } from 'react-redux'\r\nimport contractABI from './abi/contractABI.json'\r\nimport tokenABI from './abi/tokenABI.json'\r\nimport { ethers } from 'ethers'\r\nimport { moduleTypesEN, moduleTypesCN } from './CreateData';\r\nimport { NormalToken, Market_LP_1 } from './bytecode/bytecodeAll';\r\n\r\n\r\nconst contractAddress = '0x06de5443c9C209C2288C930FD09F627c013aB9Ce'\r\nconst defaultRouter = '0xD99D1c33F9fC3444f8101754aBC46c52416550D1'\r\n\r\nconst Create = () => {\r\n    let language = useLocale();\r\n    const account = useSelector(state => state.theme.defaultAccount);\r\n    const chainID = useSelector(state => state.theme.chainID);\r\n\r\n    const initModuleType = [\r\n        {\r\n            MODULE: language === \"CN\" ? \"請選擇合約模板\" : \"Choose Token Template\",\r\n            Description: \"\"\r\n        }\r\n    ]\r\n\r\n    const ERRORSTATE = {\r\n        STATE_1: language === \"CN\" ? \"代幣地址異常\" : \"Token Not Found\",\r\n        STATE_2: language === \"CN\" ? \"並非合約地址\" : \"Not A Contract\"\r\n    }\r\n\r\n    const DROPDOWN = {\r\n        DROPDOWN_MODULE: \"0\",\r\n        DROPDOWN_BASE: \"1\",\r\n        DROPDOWN_SWAP: \"2\",\r\n    }\r\n\r\n    const chainOptions = {\r\n        okc: '0x42',\r\n        bsc: '0x38',\r\n        bsctest: '0x61'\r\n    }\r\n\r\n    const SwapOptions = {\r\n        BSC: [\r\n            {\r\n                Name: \"PancakeSwap\",\r\n                Contract: \"0x10ED43C718714eb63d5aA57B78B54704E256024E\"\r\n            },\r\n            {\r\n                Name: \"BabySwap\",\r\n                Contract: \"0xD99D1c33F9fC3444f8101754aBC46c52416550D1\"\r\n            },\r\n            {\r\n                Name: \"JSwap\",\r\n                Contract: \"0xD99D1c33F9fC3444f8101754aBC46c52416550D1\"\r\n            }\r\n        ],\r\n        BSCTest: [\r\n            {\r\n                Name: \"PancakeSwap\",\r\n                Contract: \"0xD99D1c33F9fC3444f8101754aBC46c52416550D1\"\r\n            },\r\n            {\r\n                Name: \"BabySwap\",\r\n                Contract: \"0x10ED43C718714eb63d5aA57B78B54704E256024E\"\r\n            },\r\n        ],\r\n        OKC: [\r\n            {\r\n                Name: \"JSwap\",\r\n            }\r\n        ]\r\n    };\r\n\r\n    const BaseOptions = {\r\n        BSC: [\r\n            //如果是BNB作為底池 直接使用一般合約\r\n            {\r\n                Name: \"BNB\",\r\n\r\n            },\r\n            //如果是其他代幣 則使用 以BEP20為底的合約\r\n            {\r\n                Name: \"USDT\",\r\n                Contract: \"0x55d398326f99059fF775485246999027B3197955\"\r\n\r\n            },\r\n            {\r\n                Name: \"BUSD\",\r\n                Contract: \"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\"\r\n            }\r\n        ],\r\n        BSCTest: [\r\n            //如果是BNB作為底池 直接使用一般合約\r\n            {\r\n                Name: \"BNB\",\r\n\r\n            },\r\n            //如果是其他代幣 則使用 以BEP20為底的合約\r\n            {\r\n                Name: \"USDT\",\r\n                Contract: \"0x7ef95a0FEE0Dd31b22626fA2e10Ee6A223F8a684\"\r\n\r\n            },\r\n            {\r\n                Name: \"BUSD\",\r\n                Contract: \"0xaB1a4d4f1D656d2450692D237fdD6C7f9146e814\"\r\n            }\r\n        ],\r\n        OKC: [\r\n            {\r\n                Name: \"OKT\",\r\n            },\r\n            {\r\n                Name: \"USDT\",\r\n                Contract: \"0x7ef95a0FEE0Dd31b22626fA2e10Ee6A223F8a684\"\r\n\r\n            },\r\n            {\r\n                Name: \"BUSD\",\r\n                Contract: \"0xaB1a4d4f1D656d2450692D237fdD6C7f9146e814\"\r\n            }\r\n        ]\r\n    };\r\n\r\n    /*\r\n            ===================================\r\n            ===================================\r\n     \r\n                USE STATE START    \r\n     \r\n            ===================================\r\n            ===================================\r\n    */\r\n    const [name, setName] = useState('');\r\n    const [symbol, setSymbol] = useState('');\r\n    const [decimal, setDecimal] = useState('');\r\n    const [totalSupply, setTotalSupply] = useState('');\r\n    const [routerAddress, setRouterAddress] = useState(defaultRouter);\r\n    const [marketingFee, setMarketingFee] = useState(0);\r\n    const [liquidityFee, setLiquidityFee] = useState(0);\r\n    const [rewardFee, setRewardFee] = useState(0);\r\n\r\n    // const [rewardToken, setRewardToken] = useState(defaultReward[0].Contract);\r\n    const [marketingWallet, setMarketingWallet] = useState('');\r\n    const [lpBaseToken, setLpBaseToken] = useState('');\r\n\r\n    const [provider, setProvider] = useState(null)\r\n    const [signer, setSigner] = useState(null)\r\n    const [contract, setContract] = useState(null)\r\n    const [nameSymbol, setNameSymbol] = useState(\"USDT\");\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isBaseOpen, setIsBaseOpen] = useState(false);\r\n    const [isSwapOpen, setIsSwapOpen] = useState(false);\r\n\r\n    //選擇中文 還是英文模板\r\n    const [moduleTypes, setModuleTypes] = useState(initModuleType)\r\n\r\n    //選擇模板中的哪個模板 0稅 / 營銷回流 / 分紅\r\n    const [selectedValue, setSelectedValue] = useState(moduleTypes[0].MODULE);\r\n\r\n    //選擇模板代表的數字 0稅 - 1 / 營銷回流 - 2 / 分紅 - 3\r\n    const [selectedValueIndex, setSelectedValueIndex] = useState(0);\r\n\r\n    //偵測到在哪個鍊以後\r\n    //傳入底池選項\r\n    const [baseOptionsWithChain, setBaseOptionsWithChain] = useState([]);\r\n    //傳入Swap選項\r\n    const [swapOptionsWithChain, setSwapOptionsWithChain] = useState([]);\r\n\r\n    const [selectedBaseValue, setSelectedBaseValue] = useState('');\r\n    const [selectedBaseValueIndex, setSelectedBaseValueIndex] = useState(0);\r\n\r\n    const [selectedSwapValue, setSelectedSwapValue] = useState('');\r\n    const [selectedSwapValueIndex, setSelectedSwapValueIndex] = useState(0);\r\n\r\n    const [isTokenNotFound, setIsTokenNotFound] = useState(false);\r\n\r\n    /*\r\n            ===================================\r\n            ===================================\r\n     \r\n                USE STATE END    \r\n     \r\n            ===================================\r\n            ===================================\r\n    */\r\n\r\n    const updateEthers = async () => {\r\n        let tempProvider = new ethers.providers.Web3Provider(window.ethereum);\r\n        setProvider(tempProvider);\r\n\r\n        let tempSigner = tempProvider.getSigner();\r\n        setSigner(tempSigner);\r\n\r\n        let tempContract = new ethers.Contract(contractAddress, contractABI, tempSigner)\r\n        setContract(tempContract);\r\n    }\r\n\r\n    const updateReward = async (value) => {\r\n        try {\r\n            let tempTokenContract = new ethers.Contract(value, tokenABI, signer)\r\n            let tempSymbol = await tempTokenContract.symbol();\r\n            setNameSymbol(`${tempSymbol}`)\r\n        } catch {\r\n            setNameSymbol(ERRORSTATE.STATE_2);\r\n            setIsTokenNotFound(true);\r\n        }\r\n    }\r\n\r\n    /*\r\n            ===================================\r\n            ===================================\r\n     \r\n                USE EFFECT START    \r\n     \r\n            ===================================\r\n            ===================================\r\n    */\r\n\r\n    useEffect(() => {\r\n        //偵測到 鍊 改變時，改變底池 以及 Router的選項\r\n\r\n        if (chainID === chainOptions.bsc) {\r\n            //更改Router選項\r\n            setSwapOptionsWithChain(SwapOptions.BSC)\r\n            setSelectedSwapValue(SwapOptions.BSC[0].Name)\r\n\r\n            //更改底池選項\r\n            setBaseOptionsWithChain(BaseOptions.BSC)\r\n            setSelectedBaseValue(BaseOptions.BSC[0].Name)\r\n        }\r\n        if (chainID === chainOptions.bsctest) {\r\n            setSwapOptionsWithChain(SwapOptions.BSCTest)\r\n            setSelectedSwapValue(SwapOptions.BSCTest[0].Name)\r\n\r\n            setBaseOptionsWithChain(BaseOptions.BSCTest)\r\n            setSelectedBaseValue(BaseOptions.BSCTest[0].Name)\r\n        }\r\n        if (chainID === chainOptions.okc) {\r\n            setSwapOptionsWithChain(SwapOptions.OKC)\r\n            setSelectedSwapValue(SwapOptions.OKC[0].Name)\r\n\r\n            setBaseOptionsWithChain(BaseOptions.OKC)\r\n            setSelectedBaseValue(BaseOptions.OKC[0].Name)\r\n        }\r\n    }, [chainID])\r\n\r\n    useEffect(() => {\r\n        if (account !== null)\r\n            updateEthers()\r\n    }, [account, chainID])\r\n\r\n\r\n    /*  更換語言時 模板更換 */\r\n    useEffect(() => {\r\n        if (language === \"CN\") {\r\n            setModuleTypes(moduleTypesCN)\r\n            setSelectedValue(moduleTypesCN[selectedValueIndex].MODULE);\r\n            return;\r\n        }\r\n        setModuleTypes(moduleTypesEN)\r\n        setSelectedValue(moduleTypesEN[selectedValueIndex].MODULE);\r\n        return;\r\n    }, [language])\r\n\r\n\r\n    /*\r\n            ===================================\r\n            ===================================\r\n     \r\n                USE EFFECT END    \r\n     \r\n            ===================================\r\n            ===================================\r\n    */\r\n\r\n    const styles = {\r\n        height: '80px',\r\n        width: '100%',\r\n        paddingRight: '5vw',\r\n        paddingLeft: '5vw',\r\n    }\r\n\r\n    const styles2 = {\r\n        border: '1px solid black',\r\n        width: '90%',\r\n        height: '30px',\r\n        padding: '5px 10px',\r\n        marginTop: '5px',\r\n        borderRadius: '5px',\r\n    }\r\n    const styles3 = {\r\n        border: '1px solid black',\r\n        width: '90%',\r\n        height: '30px',\r\n        padding: '5px 10px',\r\n        marginTop: '5px',\r\n        borderRadius: '5px',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n    }\r\n\r\n    const ErrorChinese = (text, value) => {\r\n        if (value === '') value = \"空\"\r\n        swal(\"錯誤\", `${text}的值 不可為 ${value}`, \"error\")\r\n    }\r\n    const ErrorEnglish = (text, value) => {\r\n        if (value === '') value = \"null\"\r\n        swal(\"Error\", `The value of ${text} : ${value} is invalid`, \"error\")\r\n    }\r\n\r\n    const deploy = async (value) => {\r\n        if (value === 0) {\r\n            /* 還沒有選定任何模板 */\r\n        }\r\n        /* 0稅普通模板*/\r\n        if (value === 1)\r\n            try {\r\n                let etherValue = ethers.utils.parseEther(\"0.05\");\r\n                // console.log(etherValue);\r\n                let result = await contract.deployNormalContract(\r\n                    NormalToken,\r\n                    [name, symbol],\r\n                    totalSupply,\r\n                    decimal,\r\n                    { value: etherValue },\r\n                )\r\n                console.log(result)\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        /* 營銷回流模板 */\r\n        if (value === 2) {\r\n            /* 選定BNB 模板 */\r\n            if (selectedBaseValueIndex === 0) {\r\n                console.log(routerAddress)\r\n                try {\r\n                    let result = await contract.deployContract(\r\n                        value,\r\n                        Market_LP_1,\r\n                        [routerAddress, marketingWallet],\r\n                        [name, symbol],\r\n                        [marketingFee * 100, liquidityFee * 100],\r\n                        [marketingFee * 100, liquidityFee * 100],\r\n                        totalSupply,\r\n                        decimal,\r\n                    )\r\n                    console.log(result)\r\n                } catch (err) {\r\n                    console.log(err)\r\n                }\r\n            }\r\n\r\n            /* 選定其他底池模板 */\r\n            /* USDT模板 */\r\n            if (selectedBaseValueIndex !== 0) { console.log(lpBaseToken) }\r\n            // try {\r\n            //     let result = await contract.deploy(\r\n            //         routerAddress,\r\n            //         baseOptionsWithChain[selectedBaseValueIndex].contract,\r\n            //         name,\r\n            //         symbol,\r\n            //         [marketingFee * 100, liquidityFee * 100],\r\n            //         [marketingFee * 100, liquidityFee * 100],\r\n            //         decimal,\r\n            //         totalSupply,\r\n            //         marketingWallet\r\n            //     )\r\n            //     console.log(result)\r\n            // } catch (err) {\r\n            //     console.log(err)\r\n            // }\r\n        }\r\n\r\n    }\r\n\r\n    const beforedeploy = async (e) => {\r\n        e.preventDefault();\r\n        if (selectedValueIndex === 0) {\r\n            if (language !== \"CN\") {\r\n                swal(\"Error\", `Please Choose The Token Template You Want To Deploy`, \"error\")\r\n                return;\r\n            }\r\n            swal(\"錯誤\", `請選擇代幣類型`, \"error\")\r\n            return;\r\n        }\r\n        if (name === '') {\r\n            if (language !== \"CN\") {\r\n                ErrorEnglish(\"Token Name\", name)\r\n                return;\r\n            }\r\n            ErrorChinese(\"代幣名稱\", name)\r\n            return;\r\n        }\r\n        if (symbol === '') {\r\n            if (language !== \"CN\") {\r\n                ErrorEnglish(\"Token Symbol\", symbol)\r\n                return;\r\n            }\r\n            ErrorChinese(\"代幣縮寫\", symbol)\r\n            return;\r\n        }\r\n        if (decimal === '' || decimal < 0 || decimal > 18) {\r\n            if (language !== \"CN\") {\r\n                ErrorEnglish(\"Token Decimal\", decimal)\r\n                return;\r\n            }\r\n            ErrorChinese(\"代幣精度\", decimal)\r\n            return;\r\n        }\r\n        if (totalSupply === '' || totalSupply < 0 || totalSupply.toString().includes(\".\")) {\r\n            if (language !== \"CN\") {\r\n                ErrorEnglish(\"Token Supply\", totalSupply)\r\n                return;\r\n            }\r\n            ErrorChinese(\"代幣供應量\", totalSupply)\r\n            return;\r\n        }\r\n        deploy(selectedValueIndex)\r\n    }\r\n\r\n\r\n\r\n    const texts = {\r\n        title: language !== \"CN\" ? \"Token Creator\" : \"一鍵發幣\",\r\n        module: language !== \"CN\" ? \"Token Template\" : \"請選擇合約模板\",\r\n        description: language !== \"CN\" ? \"Token Description\" : \"代幣說明\",\r\n    }\r\n\r\n\r\n\r\n    const datas = [\r\n        {\r\n            position: 0,\r\n            title: language !== \"CN\" ? \"Token Name\" : \"代幣名稱\",\r\n            value: name,\r\n            textType: \"text\",\r\n            function: e => setName(e.target.value),\r\n            style: styles2,\r\n            placeholder: \"Ethereum\",\r\n        },\r\n        {\r\n            position: 1,\r\n            title: language !== \"CN\" ? \"Token Symbol\" : \"代幣縮寫\",\r\n            value: symbol,\r\n            textType: \"text\",\r\n            function: e => setSymbol(e.target.value),\r\n            style: styles2,\r\n            placeholder: \"ETH\",\r\n        },\r\n        {\r\n            position: 2,\r\n            title: language !== \"CN\" ? \"Token Decimal\" : \"代幣精度\",\r\n            value: decimal,\r\n            textType: \"number\",\r\n            function: e => setDecimal(e.target.value),\r\n            style: styles2,\r\n            placeholder: \"0 ~ 18\",\r\n        },\r\n        {\r\n            position: 3,\r\n            title: language !== \"CN\" ? \"Token Supply\" : \"代幣供應量\",\r\n            value: totalSupply,\r\n            textType: \"number\",\r\n            function: e => setTotalSupply(e.target.value),\r\n            style: styles2,\r\n            placeholder: \"1000000\",\r\n        },\r\n        {\r\n            position: 4,\r\n            title: language !== \"CN\" ? \"Base Currency\" : \"底池幣種\",\r\n            value: lpBaseToken,\r\n            textType: \"text\",\r\n            // function: e => setLpBaseToken(e.target.value),\r\n            style: styles3,\r\n            // placeholder: \"1000000\",\r\n        },\r\n        {\r\n            position: 5,\r\n            title: language !== \"CN\" ? \"DEX\" : \"去中心化交易所\",\r\n            value: routerAddress,\r\n            textType: \"text\",\r\n            // function: e => setRouterAddress(e.target.value),\r\n            style: styles3,\r\n            // placeholder: \"1000000\",\r\n        },\r\n        {\r\n            position: 6,\r\n            title: language !== \"CN\" ? \"Marketing Fee\" : \"營銷稅率\",\r\n            value: marketingFee,\r\n            textType: \"number\",\r\n            function: e => setMarketingFee(e.target.value),\r\n            style: styles2,\r\n            // placeholder: \"1000000\",\r\n        },\r\n        {\r\n            position: 7,\r\n            title: language !== \"CN\" ? \"Liquidity Fee\" : \"回流稅率\",\r\n            value: liquidityFee,\r\n            textType: \"number\",\r\n            function: e => setLiquidityFee(e.target.value),\r\n            style: styles2,\r\n            // placeholder: \"1000000\",\r\n        },\r\n        {\r\n            position: 8,\r\n            title: language !== \"CN\" ? \"Marketing Wallet\" : \"營銷錢包\",\r\n            value: marketingWallet,\r\n            textType: \"text\",\r\n            function: e => setMarketingWallet(e.target.value),\r\n            style: styles2,\r\n            // placeholder: \"1000000\",\r\n        },\r\n        // {\r\n        //     position: 9,\r\n        //     title: language !== \"CN\" ? \"Reflection Fee\" : \"分紅稅率\",\r\n        //     value: rewardFee,\r\n        //     textType: \"number\",\r\n        //     function: e => setRewardFee(e.target.value),\r\n        //     style: styles2,\r\n        //     // placeholder: \"1000000\",\r\n        // },\r\n        // {\r\n        //     position: 10,\r\n        //     title: language !== \"CN\" ? \"Reflection Token\" : \"分紅代幣\",\r\n        //     value: rewardToken,\r\n        //     textType: \"text\",\r\n        //     function: e => setRewardToken(e.target.value),\r\n        //     style: styles2,\r\n        //     // placeholder: \"1000000\",\r\n        // },\r\n    ]\r\n\r\n    const toggleDropdown = (value) => {\r\n        if (value === DROPDOWN.DROPDOWN_MODULE)\r\n            setIsOpen(!isOpen);\r\n        if (value === DROPDOWN.DROPDOWN_BASE)\r\n            setIsBaseOpen(!isBaseOpen);\r\n        if (value === DROPDOWN.DROPDOWN_SWAP)\r\n            setIsSwapOpen(!isSwapOpen)\r\n    };\r\n\r\n    const handleOptionSelect = (value) => {\r\n        setSelectedValue(moduleTypes[value].MODULE);\r\n        setSelectedValueIndex(value)\r\n        setIsOpen(false);\r\n    };\r\n    const handleBaseOptionSelect = (value) => {\r\n        //設定前端 底池 的名字\r\n        setSelectedBaseValue(baseOptionsWithChain[value].Name)\r\n        //設定 底池 所相對應的數字\r\n        setSelectedBaseValueIndex(value)\r\n        //設定 底池 合約\r\n        if (value !== 0) setLpBaseToken(baseOptionsWithChain[value].Contract)\r\n        setIsBaseOpen(false);\r\n    };\r\n\r\n    const handleSwapOptionSelect = (value) => {\r\n        //設定前端 Swap 的名字\r\n        setSelectedSwapValue(swapOptionsWithChain[value].Name)\r\n        //設定 Swap 所相對應的數字\r\n        setSelectedSwapValueIndex(value)\r\n        //設定 Swap 合約\r\n        setRouterAddress(swapOptionsWithChain[value].Contract)\r\n        setIsSwapOpen(false);\r\n    };\r\n\r\n    return (\r\n\r\n        //  一鍵發幣 頁面\r\n\r\n        <div style={{\r\n            width: '92%',\r\n            color: 'black',\r\n            position: 'absolute',\r\n            height: '85vh',\r\n            overflowY: 'scroll',\r\n            paddingLeft: '20px',\r\n            border: '1px solid lightgray'\r\n        }}>\r\n            <div style={{ textAlign: 'left', paddingTop: '15px' }}>\r\n                <h1>{texts.title} - V1</h1><br />\r\n            </div>\r\n\r\n            {/* --選擇代幣模板-- */}\r\n            <div>\r\n                <h5 style={{\r\n                    justifyContent: 'space-between',\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    width: '90%'\r\n                }}>\r\n                    <div>\r\n                        {texts.module}\r\n                    </div>\r\n                </h5>\r\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                    <span\r\n                        onClick={() => toggleDropdown(DROPDOWN.DROPDOWN_MODULE)}\r\n                        style={{\r\n                            marginLeft: '5vw',\r\n                            backgroundColor: 'white',\r\n                            border: '1px solid black',\r\n                            borderRadius: '5px',\r\n                            cursor: 'pointer',\r\n                            padding: '5px 10px',\r\n                            maxWidth: '220px',\r\n                            width: '100%',\r\n                            justifyContent: 'space-between',\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            fontWeight: 'bold',\r\n                            alignItems: 'center',\r\n                            position: 'relative',\r\n                            zIndex: '1',\r\n                        }}>\r\n                        <div>{selectedValue || texts.module}</div><div> ▼ </div>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            {/* --代幣模板選單-- */}\r\n            {\r\n                isOpen && (\r\n                    <ul style={{ marginLeft: '5vw', zIndex: '1', position: 'absolute', backgroundColor: 'white', border: '1px solid black' }}>\r\n                        {\r\n                            moduleTypes.map((module, index) => {\r\n                                if (index !== 0)\r\n                                    return (\r\n                                        <li\r\n                                            onClick={() => {\r\n                                                handleOptionSelect(index)\r\n                                            }}\r\n                                            key={index}\r\n                                            style={{\r\n                                                padding: '5px 10px',\r\n                                                width: '220px',\r\n                                                cursor: 'pointer',\r\n                                            }}\r\n                                        >{module.MODULE}\r\n                                        </li>\r\n                                    )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                )\r\n            }\r\n            <p style={{\r\n                marginLeft: '7vw',\r\n                color: 'gray',\r\n                width: '70%',\r\n            }}>{moduleTypes[selectedValueIndex].Description}</p><br />\r\n\r\n            {/* --一鍵發幣參數-- */}\r\n            <div\r\n                className=\"createContractWrapper\"\r\n                style={{\r\n                    marginRight: '10vw',\r\n                    marginBottom: '15px',\r\n                }}>\r\n\r\n                {\r\n                    moduleTypes !== initModuleType && selectedValueIndex !== null &&\r\n                    datas.map((data, index) => {\r\n                        if (selectedValueIndex === 0)\r\n                            return;\r\n                        if (selectedValueIndex === 1)\r\n                            if (index > 3) return;\r\n                        if (selectedValueIndex === 2)\r\n                            if (index > 9) return;\r\n                        return (\r\n                            <div key={index} style={styles}>\r\n                                {/* 設置底池 */}\r\n                                {\r\n                                    index === 4 &&\r\n                                    <div>\r\n                                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', width: '90%', alignItems: 'center' }}>\r\n                                            <h4>{data.title}</h4>\r\n                                        </div>\r\n                                        <div\r\n                                            style={data.style}\r\n                                            onClick={() => toggleDropdown(DROPDOWN.DROPDOWN_BASE)}\r\n                                        >\r\n                                            {selectedBaseValue} <div> ▼ </div>\r\n                                        </div>\r\n\r\n                                        {\r\n                                            isBaseOpen && (\r\n                                                <ul style={{ zIndex: '1', position: 'absolute', backgroundColor: 'white', border: '1px solid black' }}>\r\n                                                    {\r\n                                                        baseOptionsWithChain.map((base, index) => {\r\n                                                            return (\r\n                                                                <li\r\n                                                                    onClick={() => {\r\n                                                                        handleBaseOptionSelect(index)\r\n                                                                    }}\r\n                                                                    key={index}\r\n                                                                    style={{\r\n                                                                        padding: '5px 10px',\r\n                                                                        width: '220px',\r\n                                                                    }}\r\n                                                                >{base.Name}</li>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </ul>\r\n                                            )\r\n                                        }\r\n\r\n                                    </div>\r\n                                }\r\n\r\n                                {/* 設置路由 */}\r\n                                {\r\n                                    index === 5 &&\r\n                                    <div>\r\n                                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', width: '90%', alignItems: 'center' }}>\r\n                                            <h4>{data.title}</h4>\r\n                                        </div>\r\n                                        <div\r\n                                            style={data.style}\r\n                                            onClick={() => toggleDropdown(DROPDOWN.DROPDOWN_SWAP)}\r\n                                        >\r\n                                            {selectedSwapValue} <div> ▼ </div>\r\n                                        </div>\r\n\r\n                                        {\r\n                                            isSwapOpen && (\r\n                                                <ul style={{ zIndex: '1', position: 'absolute', backgroundColor: 'white', border: '1px solid black' }}>\r\n                                                    {\r\n                                                        swapOptionsWithChain.map((swap, index) => {\r\n                                                            return (\r\n                                                                <li\r\n                                                                    onClick={() => {\r\n                                                                        handleSwapOptionSelect(index)\r\n                                                                    }}\r\n                                                                    key={index}\r\n                                                                    style={{\r\n                                                                        padding: '5px 10px',\r\n                                                                        width: '220px',\r\n                                                                    }}\r\n                                                                >{swap.Name}</li>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </ul>\r\n                                            )\r\n                                        }\r\n\r\n                                    </div>\r\n                                }\r\n\r\n                                {\r\n                                    index !== 4 && index !== 5 &&\r\n                                    <div>\r\n                                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', width: '90%', alignItems: 'center' }}>\r\n                                            <h4>{data.title}</h4>\r\n                                            {\r\n                                                index === 10 &&\r\n                                                <span style={{ textAlign: 'right' }}>\r\n                                                    {nameSymbol}\r\n                                                </span>\r\n                                            }\r\n                                        </div>\r\n                                        <input\r\n                                            text={data.textType}\r\n                                            value={data.value}\r\n                                            onChange={data.function}\r\n                                            style={data.style}\r\n                                            placeholder={data.placeholder}\r\n                                        />\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            <button onClick={beforedeploy}\r\n                style={styles2 && { width: '80%', paddingBottom: '50px' }}\r\n            >{language === \"CN\" ? \"創建代幣\" : \"Create Token\"}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Create\r\n","export const normalToken = ''","export const Market_LP_BNB = \"0x608060405260036014553480156200001657600080fd5b50604051620024fe380380620024fe8339810160408190526200003991620007c0565b600080546001600160a01b031916329081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508460008151811062000090576200009062000894565b602002602001015160049081620000a8919062000939565b5084600181518110620000bf57620000bf62000894565b602002602001015160059081620000d7919062000939565b506006805460ff191660ff83161790556000620000f682600a62000b1a565b62000102908462000b32565b90506200011182600a62000b1a565b6200011d908462000b32565b600a9081556200012f90839062000b1a565b6200013b908462000b32565b600b5560098190558651600090889082906200015b576200015b62000894565b602090810291909101810151600c80546001600160a01b0319166001600160a01b0383169081179091553060009081526002845260408082208383528552808220879055805163c45a015560e01b815290519395508594919363c45a0155926004808401939192918290030181865afa158015620001dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000203919062000b54565b90506000816001600160a01b031663c9c6539630856001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000256573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200027c919062000b54565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015620002ca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002f0919062000b54565b601580546001600160a01b0319166001600160a01b0383169081179091556000908152600d60205260408120805460ff191660011790558a519192508a916200033d576200033d62000894565b6020026020010151600f819055508860018151811062000361576200036162000894565b6020026020010151601081905550612328601054600f5462000384919062000b72565b11156200039057600080fd5b87600081518110620003a657620003a662000894565b602002602001015160118190555087600181518110620003ca57620003ca62000894565b60200260200101516012819055506109c4601254601154620003ed919062000b72565b1115620003f957600080fd5b8460016000620004116000546001600160a01b031690565b6001600160a01b031681526020810191909152604001600020556200043e6000546001600160a01b031690565b6001600160a01b031660006001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef876040516200048491815260200190565b60405180910390a38a600181518110620004a257620004a262000894565b602090810291909101810151600380546001600160a01b0319166001600160a01b03928316908117909155600090815260079092526040808320805460ff199081166001908117909255308552828520805482168317905596831684528184208054881682179055835490921683529091208054909416179092555062000b8d98505050505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156200056f576200056f6200052e565b604052919050565b60006001600160401b038211156200059357620005936200052e565b5060051b60200190565b80516001600160a01b0381168114620005b557600080fd5b919050565b600082601f830112620005cc57600080fd5b81516020620005e5620005df8362000577565b62000544565b82815260059290921b840181019181810190868411156200060557600080fd5b8286015b848110156200062b576200061d816200059d565b835291830191830162000609565b509695505050505050565b6000601f83818401126200064957600080fd5b825160206200065c620005df8362000577565b82815260059290921b850181019181810190878411156200067c57600080fd5b8287015b84811015620007405780516001600160401b0380821115620006a25760008081fd5b818a0191508a603f830112620006b85760008081fd5b8582015181811115620006cf57620006cf6200052e565b620006e2818a01601f1916880162000544565b915080825260408c81838601011115620006fc5760008081fd5b60005b828110156200071c578481018201518482018a01528801620006ff565b828111156200072e5760008984860101525b50505084525091830191830162000680565b50979650505050505050565b600082601f8301126200075e57600080fd5b8151602062000771620005df8362000577565b82815260059290921b840181019181810190868411156200079157600080fd5b8286015b848110156200062b578051835291830191830162000795565b805160ff81168114620005b557600080fd5b60008060008060008060c08789031215620007da57600080fd5b86516001600160401b0380821115620007f257600080fd5b620008008a838b01620005ba565b975060208901519150808211156200081757600080fd5b620008258a838b0162000636565b965060408901519150808211156200083c57600080fd5b6200084a8a838b016200074c565b955060608901519150808211156200086157600080fd5b506200087089828a016200074c565b935050608087015191506200088860a08801620007ae565b90509295509295509295565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680620008bf57607f821691505b602082108103620008e057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200093457600081815260208120601f850160051c810160208610156200090f5750805b601f850160051c820191505b8181101562000930578281556001016200091b565b5050505b505050565b81516001600160401b038111156200095557620009556200052e565b6200096d81620009668454620008aa565b84620008e6565b602080601f831160018114620009a557600084156200098c5750858301515b600019600386901b1c1916600185901b17855562000930565b600085815260208120601f198616915b82811015620009d657888601518255948401946001909101908401620009b5565b5085821015620009f55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000a5c57816000190482111562000a405762000a4062000a05565b8085161562000a4e57918102915b93841c939080029062000a20565b509250929050565b60008262000a755750600162000b14565b8162000a845750600062000b14565b816001811462000a9d576002811462000aa85762000ac8565b600191505062000b14565b60ff84111562000abc5762000abc62000a05565b50506001821b62000b14565b5060208310610133831016604e8410600b841016171562000aed575081810a62000b14565b62000af9838362000a1b565b806000190482111562000b105762000b1062000a05565b0290505b92915050565b600062000b2b60ff84168362000a64565b9392505050565b600081600019048311821515161562000b4f5762000b4f62000a05565b500290565b60006020828403121562000b6757600080fd5b62000b2b826200059d565b6000821982111562000b885762000b8862000a05565b500190565b6119618062000b9d6000396000f3fe6080604052600436106102295760003560e01c8063737168ed11610123578063aa4bde28116100ab578063ce0192f91161006f578063ce0192f914610668578063d83d41431461067e578063dd62ed3e1461069e578063ec28438a146106e4578063f2fde38b1461070457600080fd5b8063aa4bde28146105e6578063adc7955d146105fc578063b3621cfb14610612578063b9fbc49d14610632578063bfac5ee01461064857600080fd5b806385dc3004116100f257806385dc3004146105535780638da5cb5b1461057357806395d89b4114610591578063a8424861146105a6578063a9059cbb146105c657600080fd5b8063737168ed146104dd57806376b5cd28146104f35780637b23e77f146105135780637f4949b51461053357600080fd5b8063313ce567116101b1578063595dec3c11610175578063595dec3c1461042d57806368092bd91461045d5780636c5808011461047d57806370a0823114610492578063715018a6146104c857600080fd5b8063313ce5671461038f5780633bfe62ca146103b15780633c11100d146103c75780634188bf5a146103f7578063553193ca1461041757600080fd5b806318160ddd116101f857806318160ddd146102e0578063206c17bb146102f557806323b872dd1461032d57806324163a1e1461034d57806327a14fc21461036f57600080fd5b806301986fad1461023557806306fdde031461027a5780630923909f1461029c578063095ea7b3146102c057600080fd5b3661023057005b600080fd5b34801561024157600080fd5b506102656102503660046115a6565b60076020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b34801561028657600080fd5b5061028f610724565b60405161027191906115ca565b3480156102a857600080fd5b506102b260145481565b604051908152602001610271565b3480156102cc57600080fd5b506102656102db36600461161f565b6107b6565b3480156102ec57600080fd5b506009546102b2565b34801561030157600080fd5b50600c54610315906001600160a01b031681565b6040516001600160a01b039091168152602001610271565b34801561033957600080fd5b5061026561034836600461164b565b6107cc565b34801561035957600080fd5b5061036d61036836600461168c565b610863565b005b34801561037b57600080fd5b5061036d61038a36600461168c565b61089b565b34801561039b57600080fd5b5060065460405160ff9091168152602001610271565b3480156103bd57600080fd5b506102b260115481565b3480156103d357600080fd5b506102656103e23660046115a6565b600d6020526000908152604090205460ff1681565b34801561040357600080fd5b50601554610315906001600160a01b031681565b34801561042357600080fd5b506102b260135481565b34801561043957600080fd5b506102656104483660046115a6565b60086020526000908152604090205460ff1681565b34801561046957600080fd5b5061036d6104783660046116b3565b6108ca565b34801561048957600080fd5b5061036d61091f565b34801561049e57600080fd5b506102b26104ad3660046115a6565b6001600160a01b031660009081526001602052604090205490565b3480156104d457600080fd5b5061036d610989565b3480156104e957600080fd5b506102b2600a5481565b3480156104ff57600080fd5b5061036d61050e36600461168c565b6109fd565b34801561051f57600080fd5b5061036d61052e36600461168c565b610a2c565b34801561053f57600080fd5b5061036d61054e36600461168c565b610a5b565b34801561055f57600080fd5b5061036d61056e3660046115a6565b610a8a565b34801561057f57600080fd5b506000546001600160a01b0316610315565b34801561059d57600080fd5b5061028f610aee565b3480156105b257600080fd5b5061036d6105c13660046116b3565b610afd565b3480156105d257600080fd5b506102656105e136600461161f565b610b52565b3480156105f257600080fd5b506102b2600b5481565b34801561060857600080fd5b506102b260125481565b34801561061e57600080fd5b5061036d61062d36600461168c565b610b5f565b34801561063e57600080fd5b506102b260105481565b34801561065457600080fd5b5061036d6106633660046116ec565b610b8e565b34801561067457600080fd5b506102b2600f5481565b34801561068a57600080fd5b5061036d6106993660046116b3565b610c4b565b3480156106aa57600080fd5b506102b26106b936600461172e565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156106f057600080fd5b5061036d6106ff36600461168c565b610ca0565b34801561071057600080fd5b5061036d61071f3660046115a6565b610ccf565b6060600480546107339061175c565b80601f016020809104026020016040519081016040528092919081815260200182805461075f9061175c565b80156107ac5780601f10610781576101008083540402835291602001916107ac565b820191906000526020600020905b81548152906001019060200180831161078f57829003601f168201915b5050505050905090565b60006107c3338484610d95565b50600192915050565b60006107d9848484610df7565b6001600160a01b038416600090815260026020908152604080832033845290915290205460001914610859576001600160a01b03841660009081526002602090815260408083203384529091529020546108349083906117ac565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b5060019392505050565b6000546001600160a01b031633146108965760405162461bcd60e51b815260040161088d906117c3565b60405180910390fd5b600f55565b6000546001600160a01b031633146108c55760405162461bcd60e51b815260040161088d906117c3565b600b55565b6000546001600160a01b031633146108f45760405162461bcd60e51b815260040161088d906117c3565b6001600160a01b03919091166000908152600860205260409020805460ff1916911515919091179055565b6000546001600160a01b031633146109495760405162461bcd60e51b815260040161088d906117c3565b601354156109835760405162461bcd60e51b815260206004820152600760248201526674726164696e6760c81b604482015260640161088d565b43601355565b6000546001600160a01b031633146109b35760405162461bcd60e51b815260040161088d906117c3565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b03163314610a275760405162461bcd60e51b815260040161088d906117c3565b601055565b6000546001600160a01b03163314610a565760405162461bcd60e51b815260040161088d906117c3565b601455565b6000546001600160a01b03163314610a855760405162461bcd60e51b815260040161088d906117c3565b601155565b6000546001600160a01b03163314610ab45760405162461bcd60e51b815260040161088d906117c3565b600380546001600160a01b039092166001600160a01b0319909216821790556000908152600760205260409020805460ff19166001179055565b6060600580546107339061175c565b6000546001600160a01b03163314610b275760405162461bcd60e51b815260040161088d906117c3565b6001600160a01b03919091166000908152600d60205260409020805460ff1916911515919091179055565b60006107c3338484610df7565b6000546001600160a01b03163314610b895760405162461bcd60e51b815260040161088d906117c3565b601255565b6003546001600160a01b03163314610bd25760405162461bcd60e51b815260206004820152600760248201526610a33ab73232b960c91b604482015260640161088d565b60405163a9059cbb60e01b81526001600160a01b0382811660048301526024820184905284169063a9059cbb906044016020604051808303816000875af1158015610c21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4591906117e3565b50505050565b6000546001600160a01b03163314610c755760405162461bcd60e51b815260040161088d906117c3565b6001600160a01b03919091166000908152600760205260409020805460ff1916911515919091179055565b6000546001600160a01b03163314610cca5760405162461bcd60e51b815260040161088d906117c3565b600a55565b6000546001600160a01b03163314610cf95760405162461bcd60e51b815260040161088d906117c3565b6001600160a01b038116610d3a5760405162461bcd60e51b815260206004820152600860248201526706e657720697320360c41b604482015260640161088d565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831660009081526008602052604090205460ff1615610e4c5760405162461bcd60e51b8152602060048201526009602482015268189b1858dad31a5cdd60ba1b604482015260640161088d565b6001600160a01b03831660009081526001602052604090205481811015610ea85760405162461bcd60e51b815260206004820152601060248201526f0c4c2d8c2dcc6ca9cdee88adcdeeaced60831b604482015260640161088d565b6001600160a01b03841660009081526007602052604090205460ff16158015610eea57506001600160a01b03831660009081526007602052604090205460ff16155b15610f1a576000612710610f008361270f611800565b610f0a919061181f565b905080831115610f18578092505b505b6001600160a01b0384166000908152600d6020526040812054819060ff1680610f5b57506001600160a01b0385166000908152600d602052604090205460ff165b156110df576001600160a01b03861660009081526007602052604090205460ff16158015610fa257506001600160a01b03851660009081526007602052604090205460ff16155b156110ba57600060135411610fb657600080fd5b601454601354610fc69190611841565b4311611011576001600160a01b0386166000908152600d602052604090205460ff1615611011576001600160a01b0385166000908152600860205260409020805460ff191660011790555b6001600160a01b0385166000908152600d602052604090205460ff16156110b557600e5460ff166110b5573060009081526001602052604090205480156110b3576000601254601154601054600f5461106a9190611841565b6110749190611841565b61107e9190611841565b9050600061138861108f8389611800565b611099919061181f565b9050828111156110a65750815b6110b081836110f4565b50505b505b600191505b6001600160a01b0385166000908152600d602052604090205460ff16156110df575060015b6110ec86868685856113f4565b505050505050565b600e805460ff1916600117905561110b8180611841565b9050600060125460105461111f9190611841565b905060008261112e8386611800565b611138919061181f565b600c549091506111539030906001600160a01b031686610d95565b604080516002808252606082018352600092602083019080368337019050509050308160008151811061118857611188611859565b6001600160a01b03928316602091820292909201810191909152600c54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156111e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611205919061186f565b8160018151811061121857611218611859565b6001600160a01b039283166020918202929092010152600c541663791ac94761124184886117ac565b60008430426040518663ffffffff1660e01b815260040161126695949392919061188c565b600060405180830381600087803b15801561128057600080fd5b505af1158015611294573d6000803e3d6000fd5b5050505082846112a491906117ac565b93506000479050600085601154600f546112be9190611841565b6112c89084611800565b6112d3906002611800565b6112dd919061181f565b90508015611321576003546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561131f573d6000803e3d6000fd5b505b83156113e1576000866113348785611800565b61133e919061181f565b905080156113df57600c5460035460405163f305d71960e01b81523060048201526024810188905260006044820181905260648201526001600160a01b0391821660848201524260a482015291169063f305d71990839060c40160606040518083038185885af11580156113b6573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906113db91906118fd565b5050505b505b5050600e805460ff191690555050505050565b6001600160a01b0385166000908152600160205260409020546114189084906117ac565b6001600160a01b0386166000908152600160205260408120919091558215611507576001600160a01b0385166000908152600d602052604090205460ff1661148b57600b546001600160a01b0386166000908152600160205260409020546114809086611841565b111561148b57600080fd5b6000600a5485111561149c57600080fd5b82156114b9576012546011546114b29190611841565b90506114cc565b601054600f546114c99190611841565b90505b60006127106114db8388611800565b6114e5919061181f565b90508015611504576114f78184611841565b9250611504883083611516565b50505b6110ec868661151684886117ac565b6001600160a01b03821660009081526001602052604090205461153a908290611841565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610dea9085815260200190565b6001600160a01b03811681146115a357600080fd5b50565b6000602082840312156115b857600080fd5b81356115c38161158e565b9392505050565b600060208083528351808285015260005b818110156115f7578581018301518582016040015282016115db565b81811115611609576000604083870101525b50601f01601f1916929092016040019392505050565b6000806040838503121561163257600080fd5b823561163d8161158e565b946020939093013593505050565b60008060006060848603121561166057600080fd5b833561166b8161158e565b9250602084013561167b8161158e565b929592945050506040919091013590565b60006020828403121561169e57600080fd5b5035919050565b80151581146115a357600080fd5b600080604083850312156116c657600080fd5b82356116d18161158e565b915060208301356116e1816116a5565b809150509250929050565b60008060006060848603121561170157600080fd5b833561170c8161158e565b92506020840135915060408401356117238161158e565b809150509250925092565b6000806040838503121561174157600080fd5b823561174c8161158e565b915060208301356116e18161158e565b600181811c9082168061177057607f821691505b60208210810361179057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156117be576117be611796565b500390565b60208082526006908201526510b7bbb732b960d11b604082015260600190565b6000602082840312156117f557600080fd5b81516115c3816116a5565b600081600019048311821515161561181a5761181a611796565b500290565b60008261183c57634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561185457611854611796565b500190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561188157600080fd5b81516115c38161158e565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156118dc5784516001600160a01b0316835293830193918301916001016118b7565b50506001600160a01b03969096166060850152505050608001529392505050565b60008060006060848603121561191257600080fd5b835192506020840151915060408401519050925092509256fea26469706673582212209c906c7d45342ba557465f13a145abd89dd3ac886de858d2193de2fce154dcb564736f6c634300080f0033\""],"names":["moduleTypesEN","MODULE","Description","moduleTypesCN","language","useLocale","account","useSelector","state","theme","defaultAccount","chainID","initModuleType","DROPDOWN","chainOptions","SwapOptions","Name","Contract","BaseOptions","useState","name","setName","symbol","setSymbol","decimal","setDecimal","totalSupply","setTotalSupply","routerAddress","setRouterAddress","marketingFee","setMarketingFee","liquidityFee","setLiquidityFee","marketingWallet","setMarketingWallet","lpBaseToken","setLpBaseToken","setProvider","setSigner","contract","setContract","nameSymbol","isOpen","setIsOpen","isBaseOpen","setIsBaseOpen","isSwapOpen","setIsSwapOpen","moduleTypes","setModuleTypes","selectedValue","setSelectedValue","selectedValueIndex","setSelectedValueIndex","baseOptionsWithChain","setBaseOptionsWithChain","swapOptionsWithChain","setSwapOptionsWithChain","selectedBaseValue","setSelectedBaseValue","selectedBaseValueIndex","setSelectedBaseValueIndex","selectedSwapValue","setSelectedSwapValue","setSelectedSwapValueIndex","updateEthers","tempProvider","ethers","window","ethereum","tempSigner","getSigner","tempContract","contractABI","useEffect","styles","height","width","paddingRight","paddingLeft","styles2","border","padding","marginTop","borderRadius","styles3","justifyContent","alignItems","display","flexDirection","ErrorChinese","text","value","swal","ErrorEnglish","deploy","etherValue","deployNormalContract","result","console","log","deployContract","beforedeploy","e","preventDefault","toString","includes","texts","title","module","description","datas","position","textType","function","target","style","placeholder","toggleDropdown","color","overflowY","textAlign","paddingTop","onClick","marginLeft","backgroundColor","cursor","maxWidth","fontWeight","zIndex","map","index","className","marginRight","marginBottom","data","base","swap","onChange","paddingBottom"],"sourceRoot":""}