{"version":3,"file":"static/js/25.3e0643a3.chunk.js","mappings":"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","sources":["views/demo/Create.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport TokenDescription from './TokenDescription'\r\nimport useLocale from 'utils/hooks/useLocale'\r\nimport swal from 'sweetalert';\r\nimport { Dropdown } from 'components/ui'\r\nimport DropdownItem from 'components/ui/Dropdown/DropdownItem';\r\nimport { useSelector } from 'react-redux'\r\nimport contractABI from './abi/contractABI.json'\r\nimport { ethers } from 'ethers'\r\n\r\nconst defaultRouter = \"0x10ED43C718714eb63d5aA57B78B54704E256024E\";\r\nconst contractAddress = \"0xa06058A579165F14e3027643Cf2C7040b5Aaf340\";\r\n\r\n\r\nconst Create = () => {\r\n    let language = useLocale();\r\n    const account = useSelector(state => state.theme.defaultAccount);\r\n\r\n\r\n    const moduleTypes =\r\n        [\r\n            {\r\n                MODULE: language !== \"CN\" ? \"Normal Token\" : \"普通代幣\",\r\n            },\r\n            {\r\n                MODULE: language !== \"CN\" ? \"Marketing && LP Token\" : \"營銷回流代幣\",\r\n            },\r\n            {\r\n                MODULE: language !== \"CN\" ? \"Reward Token\" : \"分紅代幣\",\r\n            },\r\n        ]\r\n\r\n    const [name, setName] = useState('');\r\n    const [symbol, setSymbol] = useState('');\r\n    const [decimal, setDecimal] = useState('');\r\n    const [totalSupply, setTotalSupply] = useState('');\r\n    const [routerAddress, setRouterAddress] = useState(defaultRouter);\r\n\r\n    const [provider, setProvider] = useState(null)\r\n    const [signer, setSigner] = useState(null)\r\n    const [contract, setContract] = useState(null)\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [selectedValue, setSelectedValue] = useState(moduleTypes[0].MODULE);\r\n\r\n    const updateEthers = async () => {\r\n        let tempProvider = new ethers.providers.Web3Provider(window.ethereum);\r\n        setProvider(tempProvider);\r\n\r\n        let tempSigner = tempProvider.getSigner();\r\n        setSigner(tempSigner);\r\n\r\n        let tempContract = new ethers.Contract(contractAddress, contractABI, tempSigner)\r\n        setContract(tempContract);\r\n\r\n        let contractsMade = await tempContract.addressDeployedContract(account,0);\r\n        console.log(contractsMade);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (account !== null)\r\n            updateEthers()\r\n    }, [account])\r\n\r\n    const styles = {\r\n        height: '80px',\r\n        width: '100%',\r\n        paddingRight: '5vw',\r\n        paddingLeft: '5vw',\r\n    }\r\n\r\n    const styles2 = {\r\n        border: '1px solid black',\r\n        width: '90%',\r\n        height: '30px',\r\n        padding: '5px 10px',\r\n        marginTop: '5px',\r\n        borderRadius: '5px',\r\n    }\r\n\r\n    const ErrorChinese = (text, value) => {\r\n        if (value === '') value = \"空\"\r\n        swal(\"錯誤\", `${text} 的值 不可為 ${value}`, \"error\")\r\n    }\r\n    const ErrorEnglish = (text, value) => {\r\n        if (value === '') value = \"null\"\r\n        swal(\"錯誤\", `The value of ${text} : ${value} is invalid`, \"error\")\r\n    }\r\n\r\n    const submitValue = (e) => {\r\n        e.preventDefault();\r\n        if (name === '') {\r\n            if (language !== \"CN\") {\r\n                ErrorEnglish(\"Token Name\", name)\r\n                return;\r\n            }\r\n            ErrorChinese(\"代幣名稱\", name)\r\n            return;\r\n        }\r\n        if (symbol === '') {\r\n            if (language !== \"CN\") {\r\n                ErrorEnglish(\"Token Symbol\", symbol)\r\n                return;\r\n            }\r\n            ErrorChinese(\"代幣縮寫\", symbol)\r\n            return;\r\n        }\r\n        if (decimal === '' || decimal < 0 || decimal > 18) {\r\n            if (language !== \"CN\") {\r\n                ErrorEnglish(\"Token Decimal\", decimal)\r\n                return;\r\n            }\r\n            ErrorChinese(\"代幣精度\", decimal)\r\n            return;\r\n        }\r\n        if (totalSupply === '' || totalSupply < 0 || totalSupply.toString().includes(\".\")) {\r\n            if (language !== \"CN\") {\r\n                ErrorEnglish(\"Token Supply\", totalSupply)\r\n                return;\r\n            }\r\n            ErrorChinese(\"代幣供應量\", totalSupply)\r\n            return;\r\n        }\r\n\r\n        console.log(`\r\n        ==== Values ====\r\n        Name : ${name}\r\n        Symbol : ${symbol}\r\n        Decimal : ${decimal}\r\n        Total Supply : ${totalSupply}\r\n        `)\r\n    }\r\n\r\n    const deploy = async () => {\r\n        try {\r\n            let result = await contract.deploy()\r\n            let result2 = await provider.getTransaction(result.hash)\r\n            console.log(result2)\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const texts = {\r\n        title: language !== \"CN\" ? \"Token Creator\" : \"一鍵發幣\",\r\n        module: language !== \"CN\" ? \"Token Type\" : \"請選擇合約模板\",\r\n        description: language !== \"CN\" ? \"Token Description\" : \"代幣說明\",\r\n    }\r\n\r\n    const datas = [\r\n        {\r\n            title: language !== \"CN\" ? \"Token Name\" : \"代幣名稱\",\r\n            value: name,\r\n            textType: \"text\",\r\n            function: e => setName(e.target.value),\r\n            style: styles2,\r\n            placeholder: \"Ethereum\",\r\n        },\r\n        {\r\n            title: language !== \"CN\" ? \"Token Symbol\" : \"代幣縮寫\",\r\n            value: symbol,\r\n            textType: \"text\",\r\n            function: e => setSymbol(e.target.value),\r\n            style: styles2,\r\n            placeholder: \"Eth\",\r\n        },\r\n        {\r\n            title: language !== \"CN\" ? \"Token Decimal\" : \"代幣精度\",\r\n            value: decimal,\r\n            textType: \"number\",\r\n            function: e => setDecimal(e.target.value),\r\n            style: styles2,\r\n            placeholder: \"18\",\r\n        },\r\n        {\r\n            title: language !== \"CN\" ? \"Token Supply\" : \"代幣供應量\",\r\n            value: totalSupply,\r\n            textType: \"number\",\r\n            function: e => setTotalSupply(e.target.value),\r\n            style: styles2,\r\n            placeholder: \"1000000\",\r\n        },\r\n        {\r\n            title: language !== \"CN\" ? \"Router Address\" : \"路由地址\",\r\n            value: routerAddress,\r\n            textType: \"text\",\r\n            function: e => setRouterAddress(e.target.value),\r\n            style: styles2,\r\n            // placeholder: \"1000000\",\r\n        },\r\n    ]\r\n\r\n    const toggleDropdown = () => {\r\n        setIsOpen(!isOpen);\r\n    };\r\n\r\n    const handleOptionSelect = (value) => {\r\n        setSelectedValue(value);\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const dropDownStyle = {\r\n        position: \"absolute\",\r\n        top: \"100%\",\r\n        left: \"0\",\r\n        backgroundColor: \"lightgray\",\r\n        boxShadow: \"0px 8px 16px 0px rgba(0,0,0,0.2)\",\r\n        padding: \"10px 0\",\r\n        width: \"100%\",\r\n        borderRadius: \"5px\",\r\n        zIndex: \"1\",\r\n        display: \"none\",\r\n    }\r\n    return (\r\n        <div style={{\r\n            width: '100%',\r\n            color: 'black',\r\n            position: 'absolute',\r\n            height: '85vh',\r\n            overflowY: 'scroll',\r\n            paddingLeft: '20px',\r\n            border: '1px solid lightgray'\r\n        }}>\r\n            <div style={{ textAlign: 'left', paddingTop: '15px' }}>\r\n                <h1>{texts.title}</h1><br />\r\n            </div>\r\n            <div>\r\n                <h5 style={{\r\n                    justifyContent: 'space-between',\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    width: '90%'\r\n                }}>\r\n                    <div>\r\n                        {texts.module}\r\n                    </div>\r\n                    <div>\r\n                        {texts.description}\r\n                    </div>\r\n                </h5>\r\n                <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                    <span\r\n                        onClick={toggleDropdown}\r\n                        style={{\r\n                            marginLeft: '5vw',\r\n                            backgroundColor: 'white',\r\n                            border: '1px solid black',\r\n                            borderRadius: '5px',\r\n                            cursor: 'pointer',\r\n                            padding: '5px 10px',\r\n                            maxWidth: '250px',\r\n                            width: '100%',\r\n                            justifyContent: 'space-between',\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            fontWeight: 'bold',\r\n                            alignItems: 'center',\r\n                        }}>\r\n                        <div>{selectedValue || texts.module}</div><div> ▼ </div>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            {\r\n                isOpen && (\r\n                    <ul style={{ marginLeft: '5vw', zIndex: '1', position: 'absolute', backgroundColor: 'white', border: '1px solid black' }}>\r\n                        {\r\n                            moduleTypes.map((module, index) => {\r\n                                return (\r\n                                    <li\r\n                                        onClick={() => handleOptionSelect(`${module.MODULE}`)}\r\n                                        key={index}\r\n                                        style={{\r\n                                            padding: '5px 10px',\r\n                                            width: '250px',\r\n                                        }}\r\n                                    >{module.MODULE}</li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                )\r\n            }\r\n            <br />\r\n\r\n            <div\r\n                className=\"createContractWrapper\"\r\n                style={{\r\n                    marginRight: '10vw',\r\n                }}>\r\n\r\n                {\r\n                    datas.map((data, index) => {\r\n                        return (\r\n                            <div key={index} style={styles}>\r\n                                <h4>{data.title}</h4>\r\n                                <input\r\n                                    text={data.textType}\r\n                                    value={data.value}\r\n                                    onChange={data.function}\r\n                                    style={data.style}\r\n                                    placeholder={data.placeholder}\r\n                                />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            <button onClick={submitValue}\r\n                style={styles2 && { width: '80%' }}\r\n            >Submit Value</button>\r\n\r\n            <button onClick={deploy}\r\n                style={styles2 && { width: '80%' }}\r\n            >Deploy</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Create\r\n"],"names":["language","useLocale","account","useSelector","state","theme","defaultAccount","moduleTypes","MODULE","useState","name","setName","symbol","setSymbol","decimal","setDecimal","totalSupply","setTotalSupply","routerAddress","setRouterAddress","provider","setProvider","setSigner","contract","setContract","isOpen","setIsOpen","selectedValue","setSelectedValue","updateEthers","tempProvider","ethers","window","ethereum","tempSigner","getSigner","tempContract","contractABI","addressDeployedContract","contractsMade","console","log","useEffect","styles","height","width","paddingRight","paddingLeft","styles2","border","padding","marginTop","borderRadius","ErrorChinese","text","value","swal","ErrorEnglish","deploy","result","getTransaction","hash","result2","texts","title","module","description","datas","textType","function","e","target","style","placeholder","color","position","overflowY","textAlign","paddingTop","justifyContent","display","flexDirection","onClick","marginLeft","backgroundColor","cursor","maxWidth","fontWeight","alignItems","zIndex","map","index","className","marginRight","data","onChange","preventDefault","toString","includes"],"sourceRoot":""}