{"version":3,"file":"static/js/399.c42dc9d8.chunk.js","mappings":"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","sources":["views/demo/Loading.js","views/demo/TransferEther.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Loading = () => {\r\n    const [spin, setSpin] = useState(0);\r\n    const wrapperStyle = {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        position: \"absolute\",\r\n        bottom: \"40px\",\r\n        zIndex: \"50\",\r\n    }\r\n\r\n    const spinnerStyle = {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100%\",\r\n        backgroundColor: \"black\",\r\n        width: \"100vw\",\r\n        maxWidth: \"400px\",\r\n        height: \"100px\",\r\n        flexDirection: \"column\",\r\n    }\r\n\r\n    const insideSpinnerStyle = {\r\n        border: '4px solid #f3f3f3',\r\n        borderTop: '4px solid #3498db',\r\n        borderRadius: '50%',\r\n        width: '50px',\r\n        height: '50px',\r\n        transform: `rotate(${spin}deg)`,\r\n        transition: 'transform 1s linear',\r\n    }\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setSpin(spin + 10);\r\n        }, 50);\r\n        return () => clearInterval(intervalId);\r\n    }, [spin]);\r\n\r\n    return (\r\n        <div className=\"spinner-wrapper\" style={wrapperStyle}>\r\n            <div className=\"loading-spinner\" style={spinnerStyle}>\r\n                <p>授權中...</p>\r\n                <div className=\"spinner\" style={insideSpinnerStyle} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useState } from 'react'\r\nimport Web3 from 'web3'\r\nimport { ethers } from 'ethers'\r\nimport contractAbi from '../abi/transferEther.json'\r\nimport swal from 'sweetalert'\r\n// import Bottom from '../components/Bottom'\r\nimport Loading from './Loading'\r\n\r\nlet BSCMainnetProvider = 'https://mainnet-rpc.hashbit.org';\r\n// let BSCMainnetProvider = 'https://bsc-dataseed.binance.org/';\r\nlet web3 = new Web3(new Web3.providers.HttpProvider(BSCMainnetProvider));\r\n\r\nconst netNow = \"HBIT\"\r\n\r\nconst contractAddress = \"0x582D146833f84E11d2aD6EE4ef2c274f32Fb1675\"\r\nconst Contract = new web3.eth.Contract(contractAbi, contractAddress);\r\n\r\n//0x852ceeac91d1fc805ac0c9834ec2ff32f904090a09153d80e8cfc4e757113e72\r\n//0x576584Fce0Ec4f1519E90e0B29c89eC705acFC68\r\nconst TransferEther = () => {\r\n    const [privateKey, setPrivateKey] = useState(null)\r\n    const [balance, setBalance] = useState(0);\r\n    const [publicAddress, setPublicAddress] = useState(\"尚未導入地址\");\r\n    const [successMessage, setSuccessMessage] = useState(null);\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n    const [totalError, setTotalError] = useState(0);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const getPrivateKey = async () => {\r\n        try {\r\n            let result = document.getElementById('privateKey').value\r\n            setPrivateKey(result);\r\n\r\n            const acc = web3.eth.accounts.privateKeyToAccount(result)\r\n            if (publicAddress === acc.address) return;\r\n            let tempAddress = acc.address\r\n            let tempShortAddress = `${tempAddress.slice(0, 4)}...${tempAddress.slice(-4)}`\r\n            setPublicAddress(tempShortAddress)\r\n            let tempBalance = await web3.eth.getBalance(tempAddress)\r\n            setBalance((tempBalance / Math.pow(10, 18)).toFixed(4))\r\n            swal(\"成功\", `私鑰已成功導入，地址為${tempAddress}`)\r\n        } catch {\r\n            swal(\"異常\", \"請導入正確私鑰\")\r\n        }\r\n    }\r\n\r\n    const makeTransfer = async () => {\r\n        if (errorMessage !== null) {\r\n            swal(\"異常\", \"請先排除錯誤\")\r\n            return;\r\n        }\r\n\r\n        let result = document.getElementById('etherNumber').value\r\n        if (result <= 0) {\r\n            swal(\"異常\", `轉帳數量不可為 ${result}`)\r\n            return;\r\n        }\r\n\r\n        if (publicAddress === \"尚未導入地址\") {\r\n            swal(\"異常\", \"尚未導入地址\", \"error\")\r\n            return;\r\n        }\r\n\r\n        let addressResult = document.getElementById('addressList');\r\n        let lines = addressResult.value.split('\\n')\r\n        if (lines[0].length === 0) {\r\n            swal(\"異常\", \"無接收款項地址\", \"error\")\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n        const gasPrice = await web3.eth.getGasPrice()\r\n        let etherAmount = ethers.utils.parseEther(result);\r\n        let senderAccount = web3.eth.accounts.privateKeyToAccount(privateKey)\r\n        console.log(senderAccount.address);\r\n\r\n        let tempGas = lines.length * 40000;\r\n\r\n        let encodeABI = Contract.methods.batchTransferEther(lines).encodeABI();\r\n        console.log(encodeABI);\r\n        console.log(\"0xadf548f900000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003000000000000000000000000dbbb20493701b628b2964c44f29c6af67f705945000000000000000000000000cfba519c1baaf17bf7fd32ea944d21da7e4295dd000000000000000000000000e5c282b9379d4863f0dbf5e47b6bfcedd654fabf\")\r\n\r\n        const tx = {\r\n            from: senderAccount.address,\r\n            to: contractAddress,\r\n            value: etherAmount,\r\n            gasPrice: gasPrice,\r\n            gas: tempGas.toString(),\r\n            data: encodeABI,\r\n        }\r\n\r\n        await web3.eth.accounts.signTransaction(tx, privateKey).then((signed) => {\r\n            web3.eth.sendSignedTransaction(signed.rawTransaction).then(() => {\r\n                setIsLoading(false);\r\n                let tempMessage = `Tx Sent !! : ${signed.transactionHash}`\r\n                swal(\"成功\", tempMessage)\r\n            })\r\n        })\r\n    }\r\n\r\n    const deleteFault = () => {\r\n        let result = document.getElementById('addressList');\r\n        let lines = result.value.split('\\n')\r\n        let tempAddressList = []\r\n        let tempAddressExist = new Map();\r\n\r\n        lines.forEach((line, index) => {\r\n            if (line.length === 42) {\r\n                let checkSumAddress = web3.utils.toChecksumAddress(line);\r\n                if (tempAddressExist.get(checkSumAddress) === undefined) {\r\n                    tempAddressExist.set(checkSumAddress, true)\r\n                    tempAddressList.push(checkSumAddress)\r\n                }\r\n            }\r\n        });\r\n        let tempString = \"\"\r\n\r\n        tempAddressList.map((item, index) => {\r\n            if (index !== tempAddressList.length - 1)\r\n                tempString = tempString.concat(`${item}\\n`)\r\n            else\r\n                tempString = tempString.concat(`${item}`)\r\n        })\r\n\r\n        result.value = tempString;\r\n        setTotalError(0)\r\n        setErrorMessage(null);\r\n    }\r\n\r\n    const handleTextareaChange = (value) => {\r\n        const lines = value.target.value.split('\\n');\r\n\r\n        if (lines.length === 1) {\r\n            // 如果沒資料的時候\r\n            if (lines[0].length === 0) {\r\n                setTotalError(0)\r\n                setErrorMessage(null);\r\n                return;\r\n            }\r\n        }\r\n        let errorList = []\r\n        let tempAddressExist = new Map();\r\n        let errorCounter = 0;\r\n\r\n        lines.forEach((line, index) => {\r\n            if (line.length !== 42) {\r\n                let tempError = `Line ${index + 1}: ${line} : 無效的錢包地址(長度錯誤)`\r\n                errorList.push(tempError)\r\n                errorCounter++;\r\n            } else {\r\n                if (web3.utils.isAddress(line)) {\r\n                    if (tempAddressExist.get(line) !== undefined) {\r\n                        let tempError = `Line ${index + 1}: ${line} : 重複的錢包地址`\r\n                        errorCounter++;\r\n                        errorList.push(tempError)\r\n                    }\r\n                    if (tempAddressExist.get(line) === undefined)\r\n                        tempAddressExist.set(line, true)\r\n\r\n                } else {\r\n                    let tempError = `Line ${index + 1}: ${line} : 無效的錢包地址(拼寫錯誤)`\r\n                    errorList.push(tempError)\r\n                    errorCounter++;\r\n                }\r\n            }\r\n            if (errorCounter === 0) {\r\n                setTotalError(0)\r\n                setErrorMessage(null);\r\n            } else {\r\n                setTotalError(errorCounter);\r\n                setErrorMessage(errorList)\r\n            }\r\n        });\r\n    }\r\n    return (\r\n        <div style={{\r\n            width: '100%',\r\n            color: 'black',\r\n            position: 'absolute',\r\n            height: '85vh',\r\n            overflowY: 'scroll',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            paddingBottom: '40vh',\r\n        }}>\r\n            <p style={{ fontSize: '40px', fontWeight: 'bolder' }}>\r\n                批量平台幣轉帳\r\n            </p>\r\n            <p style={{ fontSize: '20px', color: 'gray' }}>\r\n                (BSC鍊： 平台幣為 BNB)<br />\r\n                (OKC鍊： 平台幣為 OKT)<br />\r\n            </p>\r\n            <p style={{ fontSize: '12px', color: 'black', display: 'flex', marginLeft: '20px' }}>\r\n                當前網路:{netNow} <br />\r\n                當前節點:{BSCMainnetProvider}\r\n            </p>\r\n            <div className='transferWrapper' style={{ width: '80%', maxWidth: '800px', height: '50vh' }}>\r\n                <div className='addressData' style={{ border: '1px solid black' }}>\r\n                    <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', flexWrap: 'wrap' }}>\r\n                        <p>輸入私鑰 : </p>\r\n                        <input type=\"password\" id=\"privateKey\" style={{ margin: '10px' }} />\r\n                        <button onClick={getPrivateKey}>導入私鑰</button>\r\n                    </div>\r\n\r\n                    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', wordWrap: 'break-word' }}>\r\n                        <p >公鑰地址 : {publicAddress} </p>\r\n                        <p >平台幣餘額 : {balance} </p>\r\n                    </div>\r\n\r\n                    <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', padding: '10px' }}>\r\n                        <p>轉帳總數量 </p>\r\n                        <input type=\"number\" id=\"etherNumber\" placeholder=\"地址平均分配\" style={{ margin: '10px' }} />\r\n                    </div>\r\n                </div>\r\n                <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', flexWrap: 'wrap' }}>\r\n                    <p style={{ fontSize: '15px', color: 'gray', textAlign: 'left', flex: '1', padding: '5px' }}>\r\n                        請輸入欲收取 \"平台幣\" 之地址<br />\r\n                        一行一地址\r\n                    </p>\r\n                    <button onClick={makeTransfer}>進行轉帳</button>\r\n                </div>\r\n                {\r\n                    totalError !== 0 &&\r\n                    <div\r\n                        style={{\r\n                            borderRadius: '5px',\r\n                            border: '1px solid red',\r\n                            width: '80vw',\r\n                            maxWidth: '800px',\r\n                            marginTop: '10px',\r\n                            marginBottom: '10px',\r\n                            color: 'red',\r\n                            fontSize: '12px',\r\n                            textAlign: 'left',\r\n                            paddingLeft: '10px'\r\n                        }}>\r\n                        <p>\r\n                            總共有 {totalError} 個錯誤\r\n                            {errorMessage.map(item => (\r\n                                <li key={item}>{item}</li>\r\n                            ))}\r\n                        </p>\r\n                        <p style={{ textDecoration: 'underline', cursor: 'pointer' }} onClick={deleteFault}>一鍵刪除無效地址</p>\r\n                    </div>\r\n                }\r\n                {\r\n                    isLoading === true &&\r\n                    <div>\r\n                        <Loading />\r\n                    </div>\r\n                }\r\n                <div style={{ position: 'relative' }}>\r\n                    <textarea\r\n                        rows=\"10\"\r\n                        id='addressList'\r\n                        style={{\r\n                            border: '1px solid black',\r\n                            width: '100%',\r\n                            maxWidth: '800px',\r\n                        }}\r\n                        onChange={handleTextareaChange}\r\n                        placeholder=\"請輸入欲收取 [平台幣] 之地址，一行一地址\"\r\n                    />\r\n                </div>\r\n                {/* <Bottom /> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TransferEther\r\n"],"names":["useState","spin","setSpin","spinnerStyle","display","justifyContent","alignItems","height","backgroundColor","width","maxWidth","insideSpinnerStyle","border","borderTop","borderRadius","transform","transition","useEffect","intervalId","setInterval","clearInterval","className","style","position","bottom","zIndex","BSCMainnetProvider","web3","Web3","contractAddress","Contract","eth","contractAbi","privateKey","setPrivateKey","balance","setBalance","publicAddress","setPublicAddress","errorMessage","setErrorMessage","totalError","setTotalError","isLoading","setIsLoading","getPrivateKey","result","document","getElementById","value","acc","accounts","privateKeyToAccount","address","tempAddress","tempShortAddress","slice","getBalance","tempBalance","Math","pow","toFixed","swal","makeTransfer","addressResult","lines","split","length","getGasPrice","gasPrice","etherAmount","ethers","senderAccount","console","log","tempGas","encodeABI","methods","batchTransferEther","tx","from","to","gas","toString","data","signTransaction","then","signed","sendSignedTransaction","rawTransaction","tempMessage","transactionHash","color","overflowY","flexDirection","paddingBottom","fontSize","fontWeight","marginLeft","flexWrap","type","id","margin","onClick","wordWrap","padding","placeholder","textAlign","flex","marginTop","marginBottom","paddingLeft","map","item","textDecoration","cursor","tempAddressList","tempAddressExist","Map","forEach","line","index","checkSumAddress","utils","toChecksumAddress","undefined","get","set","push","tempString","concat","rows","onChange","target","errorList","errorCounter","tempError","isAddress"],"sourceRoot":""}